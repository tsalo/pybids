name: Stable tests

# This file tests the claimed support range of PyBIDS including
#
# * Operating systems: Linux, OSX
# * Installation methods: pip, sdist, wheel

on:
  push:
    branches:
      - master
      - maint/*
  pull_request: {}
  schedule:
    # 8am EST / 9am EDT M-F
    - cron: '0 13 * * 1,2,3,4,5'

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  stable:
    # Check each OS, all supported Python, minimum versions and latest releases
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        python-version: [3.8, 3.9, "3.10", "3.11"]
        install: ['pip']
        check: ['ci_tests']
        pip-flags: ['']
        requirements: ['']
        include:
          # Build docs
          - os: ubuntu-latest
            python-version: 3.11
            install: pip
            check: doc
            pip-flags: ''
          # Check all installation methods
          - os: ubuntu-latest
            python-version: 3.11
            install: wheel
            check: ci_tests
            pip-flags: ''
            requirements: ''
          - os: ubuntu-latest
            python-version: 3.11
            install: sdist
            check: ci_tests
            pip-flags: ''
            requirements: ''
          - os: ubuntu-latest
            python-version: 3.8
            install: pip
            check: ci_tests
            pip-flags: ''
            requirements: '-r min-requirements.txt'
      fail-fast: false
    env:
      INSTALL_TYPE: ${{ matrix.install }}
      CHECK_TYPE: ${{ matrix.check }}
      EXTRA_PIP_FLAGS: ${{ matrix.pip-flags }}
      OS_TYPE: ${{ matrix.os }}
      REQUIREMENTS: ${{ matrix.requirements }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install dependencies
        run: tools/ci/install_dependencies.sh
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Create virtual environment
        run: tools/ci/create_venv.sh
      - name: Build archive
        run: |
          source tools/ci/build_archive.sh
          echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV
      - name: Install pybids
        run: tools/ci/install.sh
      - name: Install extras
        run: tools/ci/install_extras.sh
      - name: Run tests
        run: |
          source tools/ci/activate.sh
          make $CHECK_TYPE
        if: ${{ matrix.check != 'skiptests' }}
      - uses: codecov/codecov-action@v3
        with:
          file: cov.xml
        if: ${{ always() }}
